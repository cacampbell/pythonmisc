#!/usr/bin/env python3
from os import environ
from shutil import which


def __get_backend():
    if which("scontrol"):
        return ("slurm")
    elif which("qstat"):
        return ("torque")


# Simple way to determine the backend for the cluster -- using API for commands
__BACKEND__ = environ["CLUSTER_BACKEND"] or __get_backend()


def __submit_slurm(duplicate=False, *args):
    pass


def __submit_torque(duplicate=False, *args):
    pass


def submit_job(duplicate=False, *args):
    if __BACKEND__ == "slurm":
        __submit_slurm(duplicate=False * args)
    elif __BACKEND__ == "torque":
        __submit_torque(duplicate=False, *args)


def __cancel_jobs_slurm(*args):
    pass


def __cancel_jobs_torque(*args):
    pass


def cancel_jobs(*args):
    if __BACKEND__ == "slurm":
        __cancel_jobs_slurm(*args)
    elif __BACKEND__ == "torque":
        __cancel_jobs_torque(*args)


def __cancel_suspended_jobs_slurm():
    pass


def __cancel_suspended_jobs_torque():
    pass


def cancel_suspended_jobs():
    if __BACKEND__ == "slurm":
        __cancel_suspended_jobs_slurm()
    elif __BACKEND__ == "torque":
        __cancel_suspended_jobs_torque()


def __requeue_suspended_jobs_slurm():
    pass


def __requeue_suspended_jobs_torque():
    pass


def requeue_suspended_jobs():
    if __BACKEND__ == "slurm":
        __requeue_suspended_jobs_slurm()
    elif __BACKEND__ == "torque":
        __requeue_suspended_jobs_torque()


def __queued_jobs_slurm():
    pass


def __queued_jobs_torque():
    pass


def queued_jobs():
    if __BACKEND__ == "slurm":
        return __queued_jobs_slurm()
    elif __BACKEND__ == "torque":
        return __queued_jobs_torque()
